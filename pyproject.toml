[tool.poetry]
name = "public_detective"
version = "1.0.0"
description = "An AI-powered tool for enhancing transparency and accountability in Brazilian public procurement."
authors = ["Matheus Aoki Hunsche <mthunsche+public-detective@gmail.com>"]
readme = "README.md"

packages = [
    {include = "public_detective", from = "source"},
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = "^3.12"
pydantic = "^2.7.1"
pydantic-extra-types = "^2.7.0"
aioresponses = "^0.7.6"
pytest-asyncio = "^0.24.0"
click = "^8.2.1"
requests = "^2.32.4"
pydantic-settings = "^2.10.1"
alembic = "^1.16.4"
sqlalchemy = "^2.0.41"
psycopg2-binary = "^2.9.9"
google-cloud-pubsub = "^2.31.1"
google-cloud-storage = "^3.3.1"
google-genai = "^1.36.0"
rarfile = "^4.2"
py7zr = "^1.0.0"
python-dotenv = "^1.1.1"
grpcio = "^1.74.0"
mammoth = "^1.11.0"
textract-py3 = "^2.1.1"
striprtf = "^0.0.29"
xlrd = "1.2.0"
openpyxl = "^3.1.5"
pyxlsb = "^1.0.10"
pillow = "^10.4.0"
imageio = "^2.37.0"
imageio-ffmpeg = "^0.6.0"

[tool.poetry.group.tests.dependencies]
aiohttp = "^3.9.5"
filelock = "^3.15.4"
pytest-dotenv = "^0.5.2"
pytest = "^8.1.1"
pytest-mock = "^3.12.0"
pytest-xdist = "^3.5.0"
faker = "^25.2.0"
requests = "^2.32.2"
pytest-timeout = "^2.4.0"
pytest-cov = "^5.0.0"
pytest-rerunfailures = "^14.0"
reportlab = "^4.2.0"
python-docx = "^1.1.2"

[tool.poetry.group.development.dependencies]
black = "^24.4.2"
bandit = "^1.8.0"
flake8 = "^7.1.1"
isort = "^5.13.2"
mypy = "^1.10.1"
coverage = "^7.5.1"
vulture = "^2.11"
pre-commit = "^3.7.1"
types-requests = "^2.32.4"
interrogate = "^1.7.0"
pydocstyle = "^6.3.0"
darglint = "^1.8.1"
pycodestyle = "^2.14.0"
flake8-bugbear = "^24.12.12"
flake8-comprehensions = "^3.17.0"
flake8-todos = "^0.3.1"
pep8-naming = "^0.15.1"
flake8-variables-names = "^0.0.6"
local-linters = {path = "linting"}

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.coverage.run]
branch = true
source = ["source/"]

[tool.coverage.report]
fail_under = 95
ignore_errors = false
omit = [
    ".venv/**",
    "*__init__*",
    "source/public_detective/migrations/*",
]

[tool.black]
line-length = 120
target-version = ['py312']
exclude = '''
/(
  \.git |
  \.mypy_cache |
  \.venv
)/
'''

[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3
skip = '''
  .git,
  .mypy_cache,
  .venv,
'''

[tool.mypy]
warn_unused_configs = true
show_error_codes = true
pretty = true
disallow_untyped_defs = true
check_untyped_defs = true
warn_return_any = true
no_implicit_optional = true
warn_unused_ignores = true
ignore_missing_imports = true
explicit_package_bases = true
namespace_packages = true
plugins = "pydantic.mypy"
exclude = '(?x)(^.venv/)'

[tool.vulture]
min_confidence = 100
ignore_names = ["cls", "self"]

[tool.bandit]
skips = ["B101", "B202"]
[tool.bandit.migrations]
skips = ["B608"]

[tool.interrogate]
fail_under = 95
verbose = 2
color = true
exclude = ["source/public_detective/migrations", "tests", ".venv", "docs"]
